# yml -> yaml(야믈) / JSON에서 괄호를 제거한 것
language: java
jdk:
  - openjdk8
# branches - Travis CI를 어느 브랜치가 푸시될때 수행할지 지정
branches:
  only:
    - master

# Travis CI 서버의 Home
# cache - 그레이들을 통해 의존성을 받게 되면 이를 해당 디렉 토리에  캐시하여 같은 의존성은 다음 배포때부터
# 다시 받지 않도록 설정
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# 빌드시 권한이 없어 오류 발생을 막기위한 권한 추가
before_install:
  - chmod +x gradlew

# script - master 브랜치에 푸시되었을때 수행하는 명령어 , gradlew를 통해 clean & build 수행
script: "./gradlew clean build"

# deploy 명령어 실행 전 수행, codeDeploy는 jar 파일을 인식 못하므로, jar + 기타 설정 파일을 모아 압축
before_deploy:
  # 현재 위치의 모든 파일들을 springboot-webservice 이름으로 압축
  - zip -r springboot-webservice ./*
  - mkdir -p deploy
  # 파일 위치 이동
  - mv springboot-webservice.zip deploy/springboot-webservice.zip

deploy:
  # s3로 파일 업로드 혹은 CodeDeploy로 배포 등 외부 서비스와 연동할 행위들을 선언
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY #Travis repo setting에 설정된 값
    secret_access_key: $AWS_SECRET_KEY #Travis repo setting에 설정된 값

    bucket: springboot-build #s3 버킷
    region: ap-northeast-2
    skip_cleanup: true
    acl: private #zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리

    wait-until-deployed : true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY #Travis repo setting에 설정된 값
    secret_access_key: $AWS_SECRET_KEY #Travis repo setting에 설정된 값

    bucket: springboot-build #s3 버킷
    key: springboot-webservice.zip #빌드파일을 압축해서 전달

    bundle_type: zip #압축확장자
    applicationn: springboot-webservice # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션

    deplyment_group: springboot-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포 그룹

    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료시 메일로 알람
notifications:
  email:
    recipients:
      - alfkwl1239@naver.com