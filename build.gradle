// 프로젝트 플러그인 의존성 관리 설정
buildscript {
    // build.gradle에서 사용하는 전역변수 설정
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    // 각종 의존성(라이브러리)들을 어떤 원격 저장소에 받을지 정함
    repositories {
        mavenCentral()
        jcenter() // 업로드 난이도가 쉬움, 추세
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}
// 선언한 플러그인 의존성들을 적용할 것인지 결정, 필수 플러그인 항상 추가!
apply plugin : 'java'
apply plugin : 'eclipse'
apply plugin : 'org.springframework.boot'
// io.spring.dependency-management : 스프링 부트의 의존성 관리 플러그인 꼭 추가!
apply plugin : 'io.spring.dependency-management'

group 'com.youngho.book'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}
// 프로젝트 개발에 필요한 의존성 선언
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.projectlombok:lombok')
    // 스프링 부트용 Spring Data Jpa 추상화 라이브러리 - 스프링 부트 버전에 맞춰 JPA 라이브러리버전을 자동으로 관리
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    // 인메모리 관계형 데이터베이스, 설치 필요 없이 프로젝트 의존성으로만 관리 가능, 메모리상 실행 - 재시작시 초기화
    compile('com.h2database:h2')
    // 머스테치 - 수많은 언어를 지원하는 가장 심플한 템플릿 엔진
    compile('org.springframework.boot:spring-boot-starter-mustache')
    /* 스프링 시큐리티 관련 의존성 - 클라이언트 입장에서 소셜 기능 구현시 필요한 의존성
    *  spring-security-oauth2-client, spring-security-oauth2-jose를 기본으로 관리
    */
    compile('org.springframework.boot:spring-boot-starter-oauth2-client')
    // spring-session-jdbc 를 추가하여 데이터 베이스를 세션저장소로 사용할 수 있도록 함
    compile('org.springframework.session:spring-session-jdbc')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    // 스프링 시큐리티 테스트를 위한 여러 도구를 지원하는 spring-security-test
    testCompile('org.springframework.security:spring-security-test')
}